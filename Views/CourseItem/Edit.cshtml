@using Microsoft.AspNetCore.Mvc.TagHelpers
@model CourseAppChallenge.ViewModels.CourseItemViewModels.EditCourseItemViewModel

@{
    ViewData["Title"] = "Edit";
}

<h1>Edit</h1>

<h4>Module</h4>

<div class="col-md-4">
    <form asp-action="Edit">
        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
        <div class="form-group">
            <label asp-for="CourseItemTitle" class="control-label"></label>
            <input asp-for="CourseItemTitle" class="form-control"/>
            <span asp-validation-for="CourseItemTitle" class="text-danger"></span>
        </div>
        @if (Model.ExistingOrder)
        {
            <h4>There is another module in this order. </h4>
            <td>
                <a asp-controller="Course" asp-action="Details" asp-route-id="@Model.CourseId">Detail</a>
            </td>
        }
        <div class="form-group">
            <label asp-for="Order" class="control-label"></label>
            <input asp-for="Order" class="form-control"/>
            <span asp-validation-for="Order" class="text-danger"></span>
        </div>
        <div class="form-group">
            <input type="submit" value="Save" class="btn btn-primary"/>
        </div>
    </form>
</div>
<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}